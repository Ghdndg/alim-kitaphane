const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const cookieParser = require('cookie-parser');
const path = require('path');
require('dotenv').config();

const authRoutes = require('./routes/auth');
const booksRoutes = require('./routes/books');
const paymentsRoutes = require('./routes/payments');
const usersRoutes = require('./routes/users');

const app = express();
const PORT = process.env.PORT || 3000;

// ะะพะฒะตััะตะผ ะฟัะพะบัะธ (nginx) - ัะบะฐะทัะฒะฐะตะผ ะบะพะปะธัะตััะฒะพ ะฟัะพะบัะธ
app.set('trust proxy', 1);

// Middleware ะฑะตะทะพะฟะฐัะฝะพััะธ
app.use(helmet({
    contentSecurityPolicy: {
        directives: {
            defaultSrc: ["'self'"],
            styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com", "https://cdnjs.cloudflare.com"],
            fontSrc: ["'self'", "https://fonts.gstatic.com", "https://cdnjs.cloudflare.com"],
            scriptSrc: ["'self'", "https://cdnjs.cloudflare.com"],
            imgSrc: ["'self'", "data:", "https:"],
        },
    },
}));

// Rate limiting
const limiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 ะผะธะฝัั
    max: 100, // ะปะธะผะธั 100 ะทะฐะฟัะพัะพะฒ ั IP ะทะฐ 15 ะผะธะฝัั
    message: {
        error: 'ะกะปะธัะบะพะผ ะผะฝะพะณะพ ะทะฐะฟัะพัะพะฒ ั ััะพะณะพ IP, ะฟะพะฟัะพะฑัะนัะต ะฟะพะทะถะต.'
    },
    standardHeaders: true,
    legacyHeaders: false,
    // ะัะฟะพะปัะทัะตะผ X-Forwarded-For ะธะท nginx
    skipFailedRequests: false,
    skipSuccessfulRequests: false
});

const authLimiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 ะผะธะฝัั
    max: 5, // ะปะธะผะธั 5 ะฟะพะฟััะพะบ ะฒัะพะดะฐ ะทะฐ 15 ะผะธะฝัั
    message: {
        error: 'ะกะปะธัะบะพะผ ะผะฝะพะณะพ ะฟะพะฟััะพะบ ะฒัะพะดะฐ, ะฟะพะฟัะพะฑัะนัะต ะฟะพะทะถะต.'
    },
    standardHeaders: true,
    legacyHeaders: false,
    skipFailedRequests: false
});

app.use(limiter);
app.use('/api/auth/login', authLimiter);
app.use('/api/auth/register', authLimiter);

// CORS ะฝะฐัััะพะนะบะธ
app.use(cors({
    origin: process.env.FRONTEND_URL || 'http://localhost:8000',
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'Cookie']
}));

// ะะฐััะธะฝะณ JSON ะธ cookies
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true }));
app.use(cookieParser());

// ะกัะฐัะธัะตัะบะธะต ัะฐะนะปั
app.use(express.static('.'));
app.use('/uploads', express.static('uploads'));

// API ะผะฐัััััั
app.use('/api/auth', authRoutes);
app.use('/api/books', booksRoutes);
app.use('/api/payments', paymentsRoutes);
app.use('/api/users', usersRoutes);

// ะะฑัะฐะฑะพัะบะฐ 404 ะดะปั API
app.use('/api/*', (req, res) => {
    res.status(404).json({ error: 'API endpoint ะฝะต ะฝะฐะนะดะตะฝ' });
});

// ะะฑัะปัะถะธะฒะฐะฝะธะต ััะพะฝัะตะฝะดะฐ
app.get('*', (req, res) => {
    if (req.path.includes('.')) {
        return res.status(404).send('ะคะฐะนะป ะฝะต ะฝะฐะนะดะตะฝ');
    }
    res.sendFile(path.join(__dirname, 'index.html'));
});

// ะะปะพะฑะฐะปัะฝะฐั ะพะฑัะฐะฑะพัะบะฐ ะพัะธะฑะพะบ
app.use((err, req, res, next) => {
    console.error('Server Error:', err.stack);
    
    if (err.name === 'ValidationError') {
        return res.status(400).json({ error: 'ะัะธะฑะบะฐ ะฒะฐะปะธะดะฐัะธะธ ะดะฐะฝะฝัั' });
    }
    
    if (err.name === 'JsonWebTokenError') {
        return res.status(401).json({ error: 'ะะตะดะตะนััะฒะธัะตะปัะฝัะน ัะพะบะตะฝ' });
    }
    
    res.status(500).json({ error: 'ะะฝัััะตะฝะฝัั ะพัะธะฑะบะฐ ัะตัะฒะตัะฐ' });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, () => {
    console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ฑ ะคัะพะฝัะตะฝะด: http://localhost:${PORT}`);
    console.log(`๐ API: http://localhost:${PORT}/api`);
    console.log(`๐๏ธ ะกัะตะดะฐ: ${process.env.NODE_ENV || 'development'}`);
});
