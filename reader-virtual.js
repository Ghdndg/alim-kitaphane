// ============================================
// –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –†–ò–î–ï–† –° –í–ò–†–¢–£–ê–õ–¨–ù–´–ú–ò –°–¢–†–ê–ù–ò–¶–ê–ú–ò
// –í–µ—Ä—Å–∏—è 2.0 - –ö–∞–∫ –≤ Kindle/Apple Books
// ============================================

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–Ω–∏–≥–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
(async function checkAccess() {
    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
    const accessToken = localStorage.getItem('accessToken');
    
    if (!currentUser.email || !accessToken) {
        console.error('Access denied: No user or token');
        window.location.replace('/index.html');
        return;
    }
    
    try {
        const response = await fetch('/api/users/library', {
            headers: { 'Authorization': `Bearer ${accessToken}` }
        });
        
        if (response.ok) {
            const data = await response.json();
            const bookId = 1;
            
            if (!data.library || !data.library.some(book => book.id === bookId)) {
                console.error('Access denied: Book not in library');
                window.location.replace('/index.html');
                return;
            }
            console.log('‚úÖ Access granted');
        } else {
            window.location.replace('/index.html');
        }
    } catch (error) {
        console.error('Access check error:', error);
    }
})();

// ============================================
// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
// ============================================

let pages = []; // –ú–∞—Å—Å–∏–≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
let currentPage = 0; // –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–∏–Ω–¥–µ–∫—Å –≤ –º–∞—Å—Å–∏–≤–µ)
let currentChapter = 0;
let isBookmarked = false;

let readingSettings = {
    fontSize: 16,
    fontFamily: 'Inter',
    theme: 'light',
    textWidth: 'medium',
    lineHeight: 1.6
};

// –î–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ (–≥–ª–∞–≤—ã)
const chapters = [
    {
        title: "–ö—ä–∏—Ä–∏—à",
        content: `
            <h2 class="chapter-title">–ö—ä–∏—Ä–∏—à</h2>
            <div class="text-block">
                <p>–ê–ª–∏–º –ú–∏–¥–∞—Ç –∫—ä–∞–ª–µ–º–∏–Ω–∏–Ω—ä –∞—Å–µ—Ä–∏ - "–•–∞–¥–∂–∏ –ì–∏—Ä–∞–π" —Ç–∞—Ä–∏—Ö–∏–π —Ä–æ–º–∞–Ω—ã, –ö—ä—ã—Ä—ã–º –•–∞–Ω–¥—ã—Ä—ã–Ω—ã–Ω—ä –±—É—é–∫ —à–∞—Ö—Å–∏–µ—Ç–ª–µ—Ä–∏–Ω–¥–µ–Ω –±–∏—Å–∏ –∞–∫—ä–∫—ä—ã–Ω–¥–∞. –ë—É —ç—Å–µ—Ä —Å–∞–¥–µ–¥–∂–µ —Ç–∞—Ä–∏—Ö–∏–π –≤–∞–∫—ä–∞–ª–∞—Ä—ã –∞–Ω–ª–∞—Ç–º–∞–π, –±–µ–ª—å–∫–∏ –±–∏—Ä —Ö–∞–ª–∫—ä–Ω—ã–Ω—ä –º–∏–ª–ª–∏–π —Ä—É—Ö—ã–Ω—ã, –∞–¥–µ—Ç–ª–µ—Ä–∏–Ω–∏ –≤–µ –∏—Ö—Ç–∏–∫—ä–∞–¥–ª–∞—Ä—ã–Ω—ã –∫–æ—Å—å—Ç–µ—Ä–µ.</p>
                
                <p>–•–∞–¥–∂–∏ –ì–∏—Ä–∞–π –•–∞–Ω - –ö—ä—ã—Ä—ã–º —Ç–∞—Ä–∏—Ö–∏–Ω–∏–Ω—ä —ç–Ω –±—É—é–∫ —à–∞—Ö—Å–∏–µ—Ç–ª–µ—Ä–∏–Ω–¥–µ–Ω –±–∏—Å–∏. –û–Ω—ã–Ω—ä –∑–∞–º–∞–Ω—ã–Ω–¥–∞ –ö—ä—ã—Ä—ã–º –•–∞–Ω–¥—ã—Ä—ã —ç–≤–¥–∂–∏–Ω–¥–µ —ç–¥–∏. –î–∏–ø–ª–æ–º–∞—Ç–∏—è, —Ç–∏–¥–∂–∞—Ä–µ—Ç –≤–µ —Å–∞–Ω–∞—Ç –∏–Ω–∫–∏—à–∞—Ñ —ç—Ç–º–∏—à—Ç–∏. –ö—ä—ã—Ä—ã–º —Ç–∞—Ç–∞—Ä–ª–∞—Ä—ã –±—É—Ç—é–Ω –¥—é–Ω—å—è–¥–∞ —Ö—é—Ä–º–µ—Ç–ª–µ –∫—ä–∞—Ä–∞–ª—ã—Ä–¥—ã.</p>
                
                <p>–†–æ–º–∞–Ω–¥–∞ –∞–≤—Ç–æ—Ä –±–∏–∑–Ω–∏ XV-XVI –∞—Å—ã—Ä–ª–∞—Ä—ã–Ω–∞ –∞–ª—ã–ø –±–∞—Ä–∞. –û –∑–∞–º–∞–Ω –ö—ä—ã—Ä—ã–º - –®–∏—Ä–∫ –Æ–ª—ã–Ω—ã–Ω—ä –º–∞—Ä—Ö–∏–∑ –Ω–æ–∫—Ç—ä–∞–ª–∞—Ä—ã–Ω–¥–∞–Ω –±–∏—Å–∏ —ç–¥–∏. –ë—É—é–∫ —Ç–∏–¥–∂–∞—Ä–µ—Ç –π–æ–ª–ª–∞—Ä—ã –±—É —Ç–æ–ø—Ä–∞–∫—ä–ª–∞—Ä–Ω—ã –∫–µ—á–∏—Ä–¥–∏. –®–µ—Ä–∫–ª–µ—Ä–¥–µ–Ω –≤–µ –ì—ä–∞—Ä–±–¥–∞–Ω —Ç–¥–∂–∏—Ä–ª–µ—Ä –∫–µ–ª–∏—Ä–¥–∏.</p>
                
                <p>–õ—è–∫–∏–Ω –±—É —Ä–æ–º–∞–Ω–Ω—ã–Ω—ä –∞—Å—ã–ª –∫—ä—ã–º–º–µ—Ç–∏ –æ–Ω–¥–∞ –∫–∏, –æ –±–∏–∑–≥–µ —ç—Å–∫–∏ –ö—ä—ã—Ä—ã–º–Ω—ã–Ω—ä –≥—É–Ω—å–¥–∞–ª—ã–∫—ä —Ö–∞—è—Ç—ã–Ω—ã –∫–æ—Å—å—Ç–µ—Ä–µ. –•–∞–ª–∫—ä –Ω–∞—Å—ã–ª —è—à–∞–π–¥—ã —ç–¥–∏, –Ω–µ —Ñ–∏–∫–∏—Ä —ç—Ç–∏—Ä–¥–∏, –Ω–µ–≥–µ –∏–Ω–∞–Ω—ã—Ä–¥—ã - –±—É—Ç—é–Ω –±—É–Ω–ª–∞—Ä —ç—Å–µ—Ä–¥–µ –∞—á—ã–∫—ä –∫–æ—Å—å—Ç–µ—Ä–∏–ª—å–¥–∏.</p>
            </div>
        `
    },
    {
        title: "1-—á–∏ –§–∞—Å—ã–ª - –•–∞–Ω–¥—ã—Ä –°–∞—Ä–∞–π—ã",
        content: `
            <h3 class="section-title">1-—á–∏ –§–∞—Å—ã–ª<br>–•–∞–Ω–¥—ã—Ä –°–∞—Ä–∞–π—ã</h3>
            
            <div class="text-block">
                <p>–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π —Å–∞—Ä–∞–π—ã –≥—É–Ω—å –¥–æ–≥—ä–≥—ä–∞–Ω–¥–∞ –∞–ª—Ç—ã–Ω –Ω—É—Ä–ª–∞—Ä–¥–∞ —è–ª—Ç—ã—Ä–∞–π —ç–¥–∏. –•–∞–¥–∂–∏ –ì–∏—Ä–∞–π –•–∞–Ω –¥–∏–≤–∞–Ω—Ö–∞–Ω–µ–¥–µ –æ–ª—Ç—É—Ä–µ, –¥–µ–≤–ª–µ—Ç –∏—à–ª–µ—Ä–∏–Ω–∏ –∫–æ—Å—å—Ç–µ—Ä–∏—Ä —ç–¥–∏. –ô–∞–Ω—ã–Ω–¥–∞ –≤—è–∑–∏—Ä–ª–µ—Ä–∏, –Ω—É–∫–µ—Ä–ª–µ—Ä–∏ –≤–µ –∞–ª–∏–º–ª–µ—Ä–∏ —Ç—É—Ä–¥—ã.</p>
                
                <p>"–•–∞–Ω —Ö–∞–∑—Ä–µ—Ç–ª–µ—Ä–∏," –¥–µ–¥–∏ –±–∞—à–≤–µ–∑–∏—Ä–∏ –≠–º–∏–Ω-—ç—Ñ–µ–Ω–¥–∏, "–û—Å–º–∞–Ω–ª—ã –ø–∞–¥–∏—à–∞—Ö—ã–Ω–¥–∞–Ω –º–µ–∫—Ç—É–ø –∫–µ–ª—å–¥–∏. –ê–ª—Ç—ã–Ω –û—Ä–¥–∞–Ω—ã–Ω—ä –∫–∞–ª–¥—ã–∫—ä–ª–∞—Ä—ã –∞–∫—ä—ã–Ω —ç—Ç–º–µ–∫—Ç–µ –¥–µ–≤–∞–º —ç—Ç–µ–ª–µ—Ä."</p>
                
                <p>–•–∞–¥–∂–∏ –ì–∏—Ä–∞–π —ç–ª–∏–Ω–∏ —Å–∞–∫—ä–∞–ª—ã–Ω–∞ —Å—É—Ä—Ç–µ, –¥–µ—Ä–∏–Ω —Ñ–∏–∫–∏—Ä–≥–µ –¥–∞–ª–¥—ã. –ë–∏–ª—å–¥–∏ –∫–∏ –±—É –º–µ—Å–µ–ª–µ–ª–µ—Ä –∫–æ–ø—Ç–∞–Ω –±–µ—Ä–ª–∏ –¥–µ–≤–ª–µ—Ç –∏—á—é–Ω –∑–∞—Ä–∞—Ä–ª—ã. –õ—è–∫–∏–Ω —á—ë–∑—é–º —Ç–∞–ø–º–∞–∫—ä –∫–µ—Ä–µ–∫ —ç–¥–∏.</p>
                
                <p>–°–∞—Ä–∞–π–Ω—ã–Ω—ä –ø–µ–Ω–¥–∂–µ—Ä–µ–ª–µ—Ä–∏–Ω–¥–µ–Ω –ö—ä—ã—Ä—ã–º —Ç–∞–≥—ä–ª–∞—Ä—ã–Ω—ã–Ω—ä –≥–æ–∑–µ–ª–ª–∏–≥–∏ –∫–æ—Ä—é–Ω–µ —ç–¥–∏. –¢–∞–±–∏–∞—Ç–Ω—ã–Ω—ä –±—É –±—É—é–∫—Å—é–∑—é–Ω–µ –±–∞–∫—ä—ã–ø, –•–∞–Ω —Ñ–∏–∫–∏—Ä —ç—Ç–∏—Ä —ç–¥–∏: "–ê–ª–ª–∞—Ö –±–∏–∑–≥–µ –Ω–µ –≥—É–∑–µ–ª—å –±–∏—Ä –µ—Ä –±–µ—Ä–¥–∏. –ë—É —Ç–æ–ø—Ä–∞–∫—ä–ª–∞—Ä–Ω—ã –∫—ä–æ—Ä—É–∞–º–∞–∫—ä –≤–µ –∏–Ω–∫–∏—à–∞—Ñ —ç—Ç—Ç–∏—Ä–º–µ–∫ –±–∏–∑–∏–º –±–æ—Ä–∂—É–º—ã–∑."</p>
            </div>

            <div class="text-block">
                <p>"–í–µ–∑–∏—Ä–∏ –ê–∑–∞–º," –¥–µ–¥–∏ –•–∞–Ω, "—Ö–∞–ª–∫—ä—ã–º—ã–∑–Ω—ã–Ω—ä –∞—Ö–≤–∞–ª—ã–Ω—ã –Ω–∞—Å—ã–ª –∫–æ—Ä–µ—Å–∏–Ω—ä? –•–∞—Å—ã–ª–∞—Ç –µ–º –±–æ–ª–¥—ã –º—É?"</p>
                
                <p>"–ê–ª–ª–∞—Ö–≥—ä–∞ —à—É–∫—é—Ä, –•–∞–Ω —Ö–∞–∑—Ä–µ—Ç–ª–µ—Ä–∏, –±—É –π—ã–ª –±–µ—Ä–∫–µ—Ç–ª–∏ –∫–µ—á—Ç–∏. –ë—É—é–¥–∞–π–ª–∞—Ä –µ–º –æ–ª–¥—ã, –±–∞–≥—ä–ª–∞—Ä –º–µ–π–≤–µ –±–µ—Ä–¥–∏. –•–∞–ª–∫—ä —Ä–∞–∑—ã," –¥–∂–∞–≤–∞–ø –±–µ—Ä–¥–∏ –≠–º–∏–Ω-—ç—Ñ–µ–Ω–¥–∏.</p>
            </div>
        `
    }
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–ª–∞–≤—ã...
];

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ============================================

document.addEventListener('DOMContentLoaded', function() {
    loadSettings();
    applySettings();
    initializeButtons();
    loadAllContent();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–π–º–µ—Ç –≤—Ä–µ–º—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    setTimeout(() => {
        paginateContent();
        loadReadingProgress();
        renderCurrentPage();
    }, 100);
    
    // –ü–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ–∫–Ω–∞
    let resizeTimer;
    window.addEventListener('resize', () => {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(() => {
            const progress = currentPage / pages.length;
            paginateContent();
            currentPage = Math.floor(progress * pages.length);
            renderCurrentPage();
        }, 300);
    });
});

// ============================================
// –ü–ê–ì–ò–ù–ê–¶–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê
// ============================================

function paginateContent() {
    const textContent = document.getElementById('textContent');
    const wrapper = document.querySelector('.text-content-wrapper');
    
    if (!textContent || !wrapper) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è —Ç–µ–∫—Å—Ç–∞
    const pageHeight = wrapper.clientHeight;
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è
    const tempContainer = document.createElement('div');
    tempContainer.style.cssText = `
        position: absolute;
        left: -9999px;
        width: ${wrapper.clientWidth}px;
        visibility: hidden;
    `;
    tempContainer.className = 'text-content';
    document.body.appendChild(tempContainer);
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
    const styles = window.getComputedStyle(textContent);
    tempContainer.style.fontSize = styles.fontSize;
    tempContainer.style.fontFamily = styles.fontFamily;
    tempContainer.style.lineHeight = styles.lineHeight;
    tempContainer.style.padding = styles.padding;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å HTML –∫–æ–Ω—Ç–µ–Ω—Ç
    const fullContent = textContent.innerHTML;
    tempContainer.innerHTML = fullContent;
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    pages = [];
    let currentPageContent = '';
    let currentHeight = 0;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const elements = Array.from(tempContainer.children);
    
    for (let element of elements) {
        const elementHeight = element.offsetHeight;
        
        if (currentHeight + elementHeight > pageHeight && currentPageContent) {
            // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            pages.push(currentPageContent);
            currentPageContent = element.outerHTML;
            currentHeight = elementHeight;
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            currentPageContent += element.outerHTML;
            currentHeight += elementHeight;
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (currentPageContent) {
        pages.push(currentPageContent);
    }
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    document.body.removeChild(tempContainer);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–∞–Ω–∏—Ü
    document.getElementById('totalPages').textContent = pages.length;
    
    console.log('üìÑ Paginated:', {
        totalPages: pages.length,
        pageHeight,
        avgCharsPerPage: Math.round(pages.reduce((sum, p) => sum + p.length, 0) / pages.length)
    });
}

// ============================================
// –†–ï–ù–î–ï–†–ò–ù–ì –°–¢–†–ê–ù–ò–¶–´
// ============================================

function renderCurrentPage() {
    const textContent = document.getElementById('textContent');
    if (!textContent || pages.length === 0) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    textContent.classList.add('page-turning');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    textContent.innerHTML = pages[currentPage] || '';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    document.getElementById('currentPage').textContent = currentPage + 1;
    updateProgressBar();
    updateNavigationButtons();
    
    // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    setTimeout(() => {
        textContent.classList.remove('page-turning');
    }, 400);
    
    saveReadingProgress();
}

// ============================================
// –ù–ê–í–ò–ì–ê–¶–ò–Ø
// ============================================

function previousPage() {
    if (currentPage > 0) {
        currentPage--;
        renderCurrentPage();
    }
}

function nextPage() {
    if (currentPage < pages.length - 1) {
        currentPage++;
        renderCurrentPage();
    }
}

function updateNavigationButtons() {
    const prevBtn = document.querySelector('.prev-btn');
    const nextBtn = document.querySelector('.next-btn');
    
    if (prevBtn) prevBtn.disabled = currentPage === 0;
    if (nextBtn) nextBtn.disabled = currentPage >= pages.length - 1;
}

function updateProgressBar() {
    const progress = pages.length > 0 ? (currentPage / (pages.length - 1)) * 100 : 0;
    const progressBar = document.getElementById('navProgressFill');
    if (progressBar) {
        progressBar.style.width = progress + '%';
    }
}

// ============================================
// –ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–¢–ï–ù–¢–ê
// ============================================

function loadAllContent() {
    const textContent = document.getElementById('textContent');
    if (!textContent) return;
    
    const allContent = chapters.map(chapter => chapter.content).join('');
    textContent.innerHTML = allContent;
}

// ============================================
// –ù–ê–°–¢–†–û–ô–ö–ò
// ============================================

function changeFontSize(delta) {
    readingSettings.fontSize = Math.max(12, Math.min(24, readingSettings.fontSize + delta));
    document.getElementById('fontSizeDisplay').textContent = readingSettings.fontSize + 'px';
    applySettings();
    saveSettings();
    
    setTimeout(() => {
        const progress = currentPage / pages.length;
        paginateContent();
        currentPage = Math.floor(progress * pages.length);
        renderCurrentPage();
    }, 100);
}

function changeFontFamily(family) {
    readingSettings.fontFamily = family;
    applySettings();
    saveSettings();
    
    setTimeout(() => {
        const progress = currentPage / pages.length;
        paginateContent();
        currentPage = Math.floor(progress * pages.length);
        renderCurrentPage();
    }, 100);
}

function setTheme(theme) {
    readingSettings.theme = theme;
    
    const themeButtons = document.querySelectorAll('.theme-btn');
    themeButtons.forEach(btn => {
        btn.classList.toggle('active', btn.dataset.theme === theme);
    });
    
    applySettings();
    saveSettings();
}

function setTextWidth(width) {
    readingSettings.textWidth = width;
    
    const widthButtons = document.querySelectorAll('.width-btn');
    widthButtons.forEach(btn => {
        btn.classList.toggle('active', btn.dataset.width === width);
    });
    
    applySettings();
    saveSettings();
    
    setTimeout(() => {
        const progress = currentPage / pages.length;
        paginateContent();
        currentPage = Math.floor(progress * pages.length);
        renderCurrentPage();
    }, 100);
}

function setLineHeight(height) {
    readingSettings.lineHeight = height;
    
    const heightButtons = document.querySelectorAll('.lh-btn');
    heightButtons.forEach(btn => {
        btn.classList.toggle('active', parseFloat(btn.dataset.height) === height);
    });
    
    applySettings();
    saveSettings();
    
    setTimeout(() => {
        const progress = currentPage / pages.length;
        paginateContent();
        currentPage = Math.floor(progress * pages.length);
        renderCurrentPage();
    }, 100);
}

function applySettings() {
    const textContent = document.querySelector('.text-content');
    const readerContainer = document.querySelector('.reader-container');
    
    if (!textContent) return;
    
    textContent.style.fontSize = readingSettings.fontSize + 'px';
    textContent.style.fontFamily = readingSettings.fontFamily + ', sans-serif';
    textContent.style.lineHeight = readingSettings.lineHeight;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    document.body.className = 'theme-' + readingSettings.theme;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∏—Ä–∏–Ω—É —Ç–µ–∫—Å—Ç–∞
    if (readerContainer) {
        readerContainer.className = 'reader-container text-width-' + readingSettings.textWidth;
    }
}

function loadSettings() {
    const saved = localStorage.getItem('readingSettings');
    if (saved) {
        readingSettings = { ...readingSettings, ...JSON.parse(saved) };
        document.getElementById('fontSizeDisplay').textContent = readingSettings.fontSize + 'px';
        document.getElementById('fontFamily').value = readingSettings.fontFamily;
    }
}

function saveSettings() {
    localStorage.setItem('readingSettings', JSON.stringify(readingSettings));
}

// ============================================
// –ü–†–û–ì–†–ï–°–° –ß–¢–ï–ù–ò–Ø
// ============================================

function saveReadingProgress() {
    const progressData = {
        currentPage: currentPage,
        currentChapter: currentChapter,
        timestamp: Date.now()
    };
    localStorage.setItem('readingProgress', JSON.stringify(progressData));
}

function loadReadingProgress() {
    const saved = localStorage.getItem('readingProgress');
    if (saved) {
        const progressData = JSON.parse(saved);
        currentPage = Math.min(progressData.currentPage || 0, pages.length - 1);
        currentChapter = progressData.currentChapter || 0;
    }
}

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–ù–û–ü–û–ö
// ============================================

function initializeButtons() {
    // –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–∂–µ –≤ onclick –≤ HTML
    console.log('‚úÖ Buttons initialized');
}

// ============================================
// –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê –ò –ù–ê–í–ò–ì–ê–¶–ò–Ø
// ============================================

function openSettings() {
    document.getElementById('settingsModal').style.display = 'flex';
}

function closeSettings() {
    document.getElementById('settingsModal').style.display = 'none';
}

function openTableOfContents() {
    document.getElementById('sidebar').classList.add('open');
}

function closeSidebar() {
    document.getElementById('sidebar').classList.remove('open');
}

function goToChapter(chapterIndex) {
    currentChapter = chapterIndex;
    closeSidebar();
    
    // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–∞—á–∞–ª–æ–º –≥–ª–∞–≤—ã
    // –£–ø—Ä–æ—â–µ–Ω–Ω–æ - –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–∞—á–∞–ª—É
    currentPage = 0;
    renderCurrentPage();
}

function toggleBookmark() {
    isBookmarked = !isBookmarked;
    const btn = document.querySelector('.bookmark-btn');
    if (btn) {
        btn.classList.toggle('active', isBookmarked);
    }
}

function goBack() {
    window.location.href = '/index.html';
}

function handleReaderLogout() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
        localStorage.removeItem('accessToken');
        localStorage.removeItem('currentUser');
        window.location.href = '/index.html';
    }
}

function initializeReaderProtection() {
    console.log('üîí Reader protection initialized');
}

