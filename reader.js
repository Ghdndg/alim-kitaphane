// –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —á–∏—Ç–∞–ª–∫–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
let currentUser = null;
let currentBook = null;
let currentChapter = 0;
let chapters = [];
let readingSettings = {
    fontSize: 16,
    fontFamily: 'Georgia',
    textWidth: 'medium',
    lineHeight: 1.6,
    theme: 'light'
};

// –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
let pageSystem = {
    currentPage: 1,
    totalPages: 1,
    pageHeight: 0,
    contentHeight: 0,
    visibleContent: null,
    pageContainer: null,
    isAnimating: false
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∏—Ç–∞–ª–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —á–∏—Ç–∞–ª–∫–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    checkAccess().then(() => {
        initializeReader();
        loadSettings();
        initializeButtons();
    }).catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞:', error);
        window.location.replace('index.html');
    });
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–Ω–∏–≥–µ
async function checkAccess() {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
        const userData = localStorage.getItem('currentUser');
        if (!userData) {
            throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        }
        
        currentUser = JSON.parse(userData);
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser.name);
        
        // –ü–æ–ª—É—á–∞–µ–º ID –∫–Ω–∏–≥–∏ –∏–∑ URL
        const urlParams = new URLSearchParams(window.location.search);
        const bookId = urlParams.get('book') || '1';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–Ω–∏–≥–µ —á–µ—Ä–µ–∑ API
        const response = await fetch(`/api/books/${bookId}/access`, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${currentUser.token || 'dummy'}`,
                'Content-Type': 'application/json'
            }
        });
        
        if (!response.ok) {
            throw new Error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–Ω–∏–≥–µ');
        }
        
        const bookData = await response.json();
        currentBook = bookData.book;
        chapters = bookData.chapters;
        
        console.log('üìö –ö–Ω–∏–≥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', currentBook.title);
        console.log('üìñ –ì–ª–∞–≤:', chapters.length);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞:', error);
        throw error;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∏—Ç–∞–ª–∫–∏
function initializeReader() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
    createPageContainer();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    loadAllContent();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É —Å—Ç—Ä–∞–Ω–∏—Ü
    setupPageSystem();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    loadReadingProgress();
    
    console.log('‚úÖ –ß–∏—Ç–∞–ª–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
function createPageContainer() {
    const readerMain = document.querySelector('.reader-main');
    const existingContent = document.getElementById('textContent');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    if (existingContent) {
        existingContent.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    pageSystem.pageContainer = document.createElement('div');
    pageSystem.pageContainer.className = 'page-container';
    pageSystem.pageContainer.innerHTML = `
        <div class="page-content" id="pageContent">
            <div class="page-text" id="pageText"></div>
        </div>
    `;
    
    readerMain.appendChild(pageSystem.pageContainer);
    
    // –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const style = document.createElement('style');
    style.textContent = `
        .page-container {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            overflow: hidden;
            background: var(--bg-color);
        }
        
        .page-content {
            position: absolute;
            top: 80px;
            left: 20px;
            right: 20px;
            bottom: 80px;
            overflow: hidden;
            background: var(--bg-color);
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            transition: transform 0.3s ease-in-out;
        }
        
        .page-text {
            padding: 30px;
            height: 100%;
            overflow: hidden;
            font-family: var(--font-family);
            font-size: var(--font-size);
            line-height: var(--line-height);
            color: var(--text-color);
            text-align: justify;
        }
        
        .page-turning {
            transform: translateX(-100%);
        }
        
        .page-turning-in {
            transform: translateX(100%);
            animation: slideIn 0.3s ease-in-out forwards;
        }
        
        @keyframes slideIn {
            to { transform: translateX(0); }
        }
        
        @media (max-width: 768px) {
            .page-content {
                top: 60px;
                left: 10px;
                right: 10px;
                bottom: 60px;
            }
            
            .page-text {
                padding: 20px;
            }
        }
    `;
    
    document.head.appendChild(style);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async function loadAllContent() {
    console.log('üìñ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–Ω–∏–≥–∏');
    
    let fullContent = '';
    
    for (let i = 0; i < chapters.length; i++) {
        try {
            const response = await fetch(`/api/books/${currentBook.id}/chapters/${chapters[i].id}`);
            const chapterData = await response.json();
            
            fullContent += `<div class="chapter" data-chapter="${i}">`;
            fullContent += `<h2 class="chapter-title">${chapters[i].title}</h2>`;
            fullContent += `<div class="chapter-content">${chapterData.content}</div>`;
            fullContent += `</div>`;
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤—ã ${i}:`, error);
        }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    pageSystem.fullContent = fullContent;
    console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–∏–º–≤–æ–ª–æ–≤:', fullContent.length);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–∞–Ω–∏—Ü
function setupPageSystem() {
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–∞–Ω–∏—Ü');
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    applySettings();
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
    calculatePageDimensions();
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    displayCurrentPage();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    updateNavigation();
}

// –†–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function calculatePageDimensions() {
    const pageContent = document.getElementById('pageContent');
    const pageText = document.getElementById('pageText');
    
    if (!pageContent || !pageText) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
    const containerRect = pageContent.getBoundingClientRect();
    pageSystem.pageHeight = containerRect.height;
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–º–µ—â–∞–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è
    pageText.innerHTML = pageSystem.fullContent;
    pageSystem.contentHeight = pageText.scrollHeight;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    pageSystem.totalPages = Math.max(1, Math.ceil(pageSystem.contentHeight / pageSystem.pageHeight));
    
    console.log('üìè –†–∞–∑–º–µ—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', {
        pageHeight: Math.round(pageSystem.pageHeight),
        contentHeight: Math.round(pageSystem.contentHeight),
        totalPages: pageSystem.totalPages
    });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function displayCurrentPage() {
    if (pageSystem.isAnimating) return;
    
    const pageText = document.getElementById('pageText');
    if (!pageText) return;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–∏–¥–∏–º—É—é —á–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const startOffset = (pageSystem.currentPage - 1) * pageSystem.pageHeight;
    const endOffset = startOffset + pageSystem.pageHeight;
    
    // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∏–º—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const visibleContent = createVisiblePage(startOffset, endOffset);
    pageText.innerHTML = visibleContent;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    updateNavigation();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    saveReadingProgress();
    
    console.log(`üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageSystem.currentPage}/${pageSystem.totalPages}`);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∏–º–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function createVisiblePage(startOffset, endOffset) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è
    const tempContainer = document.createElement('div');
    tempContainer.style.cssText = `
        position: absolute;
        top: -9999px;
        left: -9999px;
        width: 100%;
        font-family: var(--font-family);
        font-size: var(--font-size);
        line-height: var(--line-height);
        color: var(--text-color);
        text-align: justify;
        padding: 30px;
        box-sizing: border-box;
    `;
    tempContainer.innerHTML = pageSystem.fullContent;
    document.body.appendChild(tempContainer);
    
    // –ù–∞—Ö–æ–¥–∏–º –≤–∏–¥–∏–º—É—é —á–∞—Å—Ç—å
    const visibleContent = extractVisibleContent(tempContainer, startOffset, endOffset);
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    document.body.removeChild(tempContainer);
    
    return visibleContent;
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ–π —á–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function extractVisibleContent(container, startOffset, endOffset) {
    const walker = document.createTreeWalker(
        container,
        NodeFilter.SHOW_TEXT,
        null,
        false
    );
    
    let currentOffset = 0;
    let visibleContent = '';
    let node;
    
    while (node = walker.nextNode()) {
        const text = node.textContent;
        const nodeStart = currentOffset;
        const nodeEnd = currentOffset + text.length;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Å –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç—å—é
        if (nodeEnd > startOffset && nodeStart < endOffset) {
            const visibleStart = Math.max(0, startOffset - nodeStart);
            const visibleEnd = Math.min(text.length, endOffset - nodeStart);
            
            if (visibleStart < visibleEnd) {
                const visibleText = text.substring(visibleStart, visibleEnd);
                
                // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –≤–∏–¥–∏–º—ã–º —Ç–µ–∫—Å—Ç–æ–º
                const span = document.createElement('span');
                span.textContent = visibleText;
                visibleContent += span.outerHTML;
            }
        }
        
        currentOffset = nodeEnd;
    }
    
    return visibleContent || '<p>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</p>';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function updateNavigation() {
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const pageNumbers = document.querySelector('.page-numbers');
    if (pageNumbers) {
        pageNumbers.textContent = `${pageSystem.currentPage} / ${pageSystem.totalPages}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const progressBar = document.querySelector('.progress-bar');
    if (progressBar) {
        const progress = (pageSystem.currentPage / pageSystem.totalPages) * 100;
        progressBar.style.width = `${progress}%`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const prevBtn = document.querySelector('.prev-btn');
    const nextBtn = document.querySelector('.next-btn');
    
    if (prevBtn) {
        prevBtn.disabled = pageSystem.currentPage <= 1;
    }
    
    if (nextBtn) {
        nextBtn.disabled = pageSystem.currentPage >= pageSystem.totalPages;
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function previousPage() {
    if (pageSystem.currentPage <= 1 || pageSystem.isAnimating) return;
    
    pageSystem.currentPage--;
    animatePageTransition('prev');
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function nextPage() {
    if (pageSystem.currentPage >= pageSystem.totalPages || pageSystem.isAnimating) return;
    
    pageSystem.currentPage++;
    animatePageTransition('next');
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function animatePageTransition(direction) {
    if (pageSystem.isAnimating) return;
    
    pageSystem.isAnimating = true;
    const pageContent = document.getElementById('pageContent');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏
    pageContent.classList.add('page-turning');
    
    setTimeout(() => {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        displayCurrentPage();
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏
        pageContent.classList.remove('page-turning');
        
        pageSystem.isAnimating = false;
    }, 300);
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á—Ç–µ–Ω–∏—è
function applySettings() {
    const root = document.documentElement;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    root.style.setProperty('--font-size', `${readingSettings.fontSize}px`);
    root.style.setProperty('--font-family', readingSettings.fontFamily);
    root.style.setProperty('--line-height', readingSettings.lineHeight);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    if (readingSettings.theme === 'dark') {
        root.style.setProperty('--bg-color', '#1a1a1a');
        root.style.setProperty('--text-color', '#e0e0e0');
    } else {
        root.style.setProperty('--bg-color', '#ffffff');
        root.style.setProperty('--text-color', '#333333');
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —à–∏—Ä–∏–Ω—É —Ç–µ–∫—Å—Ç–∞
    const pageContent = document.getElementById('pageContent');
    if (pageContent) {
        pageContent.className = `page-content text-width-${readingSettings.textWidth}`;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫
function initializeButtons() {
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const prevBtn = document.querySelector('.prev-btn');
    const nextBtn = document.querySelector('.next-btn');
    
    if (prevBtn) {
        prevBtn.addEventListener('click', previousPage);
    }
    
    if (nextBtn) {
        nextBtn.addEventListener('click', nextPage);
    }
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const fontSizeMinus = document.querySelector('.font-size-minus');
    const fontSizePlus = document.querySelector('.font-size-plus');
    
    if (fontSizeMinus) {
        fontSizeMinus.addEventListener('click', () => changeFontSize(-1));
    }
    
    if (fontSizePlus) {
        fontSizePlus.addEventListener('click', () => changeFontSize(1));
    }
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫...
    console.log('üéÆ –ö–Ω–æ–ø–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
function changeFontSize(delta) {
    const newSize = Math.max(12, Math.min(24, readingSettings.fontSize + delta));
    if (newSize === readingSettings.fontSize) return;
    
    readingSettings.fontSize = newSize;
    applySettings();
    saveSettings();
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        calculatePageDimensions();
        displayCurrentPage();
    }, 100);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const fontSizeDisplay = document.getElementById('fontSizeDisplay');
    if (fontSizeDisplay) {
        fontSizeDisplay.textContent = `${readingSettings.fontSize}px`;
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function saveSettings() {
    localStorage.setItem('readingSettings', JSON.stringify(readingSettings));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function loadSettings() {
    const saved = localStorage.getItem('readingSettings');
    if (saved) {
        readingSettings = { ...readingSettings, ...JSON.parse(saved) };
    }
    applySettings();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —á—Ç–µ–Ω–∏—è
function saveReadingProgress() {
    if (currentUser && currentBook) {
        const progress = {
            userId: currentUser.id,
            bookId: currentBook.id,
            currentPage: pageSystem.currentPage,
            totalPages: pageSystem.totalPages,
            timestamp: Date.now()
        };
        
        localStorage.setItem(`readingProgress_${currentBook.id}`, JSON.stringify(progress));
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —á—Ç–µ–Ω–∏—è
function loadReadingProgress() {
    if (currentBook) {
        const saved = localStorage.getItem(`readingProgress_${currentBook.id}`);
        if (saved) {
            const progress = JSON.parse(saved);
            pageSystem.currentPage = Math.max(1, Math.min(progress.currentPage, pageSystem.totalPages));
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', () => {
    setTimeout(() => {
        calculatePageDimensions();
        displayCurrentPage();
    }, 100);
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á–∏—Ç–∞–ª–∫–∏
function goBack() {
    window.location.href = 'index.html';
}

function openSettings() {
    document.getElementById('settingsModal').style.display = 'flex';
    document.body.style.overflow = 'hidden';
}

function closeSettings() {
    document.getElementById('settingsModal').style.display = 'none';
    document.body.style.overflow = 'auto';
}

function toggleBookmark() {
    // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫–ª–∞–¥–æ–∫ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
    console.log('üîñ –ó–∞–∫–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞');
}

function openTableOfContents() {
    document.getElementById('sidebar').classList.add('open');
}

function closeTableOfContents() {
    document.getElementById('sidebar').classList.remove('open');
}

function handleReaderLogout() {
    localStorage.removeItem('currentUser');
    window.location.href = 'index.html';
}

function goToChapter(chapterIndex) {
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–µ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
    console.log('üìñ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–µ:', chapterIndex);
    closeTableOfContents();
}

function changeFontFamily(family) {
    readingSettings.fontFamily = family;
    applySettings();
    saveSettings();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.font-family-btn').forEach(btn => {
        btn.classList.toggle('active', btn.dataset.family === family);
    });
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        calculatePageDimensions();
        displayCurrentPage();
    }, 100);
}

function setTextWidth(width) {
    readingSettings.textWidth = width;
    applySettings();
    saveSettings();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.width-btn').forEach(btn => {
        btn.classList.toggle('active', btn.dataset.width === width);
    });
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        calculatePageDimensions();
        displayCurrentPage();
    }, 100);
}

function setLineHeight(height) {
    readingSettings.lineHeight = height;
    applySettings();
    saveSettings();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.lh-btn').forEach(btn => {
        btn.classList.toggle('active', parseFloat(btn.dataset.height) === height);
    });
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        calculatePageDimensions();
        displayCurrentPage();
    }, 100);
}

function setTheme(theme) {
    readingSettings.theme = theme;
    applySettings();
    saveSettings();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    document.querySelectorAll('.theme-btn').forEach(btn => {
        btn.classList.toggle('active', btn.dataset.theme === theme);
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.previousPage = previousPage;
window.nextPage = nextPage;
window.changeFontSize = changeFontSize;
window.goBack = goBack;
window.openSettings = openSettings;
window.closeSettings = closeSettings;
window.toggleBookmark = toggleBookmark;
window.openTableOfContents = openTableOfContents;
window.closeTableOfContents = closeTableOfContents;
window.handleReaderLogout = handleReaderLogout;
window.goToChapter = goToChapter;
window.changeFontFamily = changeFontFamily;
window.setTextWidth = setTextWidth;
window.setLineHeight = setLineHeight;
window.setTheme = setTheme;